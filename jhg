
	{
		printf("\n%s\n", "Opcoes:");
		printf("\n%s", "0 - Terminar");
		printf("\n%s", "1 - Method_01");
		printf("\n%s", "2 - Method_02");
		printf("\n%s", "3 - Method_03");
		printf("\n%s", "4 - Method_04");
		printf("\n%s", "5 - Method_05");
		printf("\n%s", "6 - Method_06");
		printf("\n%s", "7 - Method_07");
		printf("\n%s", "8 - Method_08");
		printf("\n");
		
		printf("\n%s", "Opcao = ");
		scanf("%d", &opcao);
		getchar();
		printf("\n%s%d", "Opcao = ", opcao);
		
		switch (opcao)
		{
		case 0:
			break;
		case 1:
			method_01();
			break;
		case 2:
			method_02();
			break;
		case 3:
			method_03();
			break;
		case 4:
			method_04();
			break;
		case 5:
			method_05();
			break;
		case 6:
			method_06();
			break;
		case 7:
			method_07();
			break;
		case 8:
			method_08();
			break;
		default:
			printf("\nERRO: Opcao invalida.\n");
			break;
		}
	} while (opcao != 0);
	
	printf("\n\nApertar ENTER para terminar.\n");
	getchar();
	return 0;
}

// Rest of the functions remain unchanged

void method_08(void)
{
	double x = 0.0;
	double y = 0.0;
	double z = 0.0;
	printf("\n%s\n", "Method_08 - Programa - v0.0");
	
	printf("%s%lf\n", "x = ", x);
	printf("%s%lf\n", "y = ", y);
	
	printf("Entrar com um valor real: ");
	scanf("%lf", &x);
	
	getchar();
	printf("Entrar com outro valor real: ");
	scanf("%lf", &y);
	
	getchar();
	z = pow(x, y);
	printf("%s(%lf) elevado a (%lf) = (%lf)\n", "z = ", x, y, z);
	
	x = pow(z, 1.0 / y);
	printf("%s(%lf) elevado a (1/%lf) = (%lf)\n", "z = ", z, y, x);
	
	z = sqrt(x);
	printf("%sraiz(%lf) = (%lf)\n", "z = ", x, z);
	
	printf("\n\nApertar ENTER para continuar.\n");
	getchar();
}

